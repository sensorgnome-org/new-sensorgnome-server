version: "3"

services:

  backend:
    build:
      context: .
    image: sensorgnome-server-backend-image
    container_name: sensorgnome-server-backend
    hostname: sensorgnome-server
    restart: on-failure
    ports:
      - "8080:8080"
    volumes:
      - ./django:/sensorgnome-server-software
    command: >
      sh -c "wait-for db:5432 && wait-for rabbit:5672 &&
            python manage.py migrate &&
            # DJANGO_SUPERUSER_PASSWORD=admin python manage.py createsuperuser --noinput --username admin --email admin@example.com &&
            python manage.py runserver 0.0.0.0:8080"
    stdin_open: true
    tty: true
    depends_on:
      - db
      - rabbit
    networks:
      - shared_network

  rabbit:
    image: rabbitmq:3-management
    container_name: sensorgnome-rabbit
    hostname: sensorgnome-rabbit
    volumes:
      - ./rabbit-tls/:/rabbitmq-tls/
      - ./configs/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    ports:
      - "5682:5672"
      - "5671:5671"
      - "15682:15672"
    networks:
      - shared_network

  worker:
    image: sensorgnome-server-backend-image
    container_name: worker
    restart: on-failure
    volumes:
      - ./django:/sensorgnome-server-software
    command: >
      sh -c "wait-for backend:8080 &&
            watchmedo auto-restart -p 'tasks.py' -i '*.pyc' -- celery -A sensorgnome_server.celery:app worker -B -l info  -s /tmp/celerybeat-schedule"
    depends_on:
      - backend
      - rabbit
      - db
    networks:
      - shared_network

  db:
    #image: postgres:10-alpine
    image: postgis/postgis
    container_name: sensorgnome-db
    hostname: sensorgnome-db
    environment:
      - POSTGRES_DB=sensorgnome-server
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    networks:
      - shared_network

  monitoring:
    image: philhawthorne/docker-influxdb-grafana
    container_name: influxdb-grafana
    hostname: influxdb-grafana
    ports:
      - "3003:3003"  # grafana
      - "3004:8083"  # chronograf
      - "8087:8086"  # influxdb
    volumes:
      - ./influxdb-data:/var/lib/influxdb
      - ./grafana-data:/var/lib/grafana
    networks:
      - shared_network

networks:
  shared_network:
    driver: bridge